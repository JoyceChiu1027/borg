<?xml version="1.0" encoding="UTF-8"?>
<!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. and/or its affiliates, and individual contributors 
	by the @authors tag. See the copyright.txt in the distribution for a full listing of individual contributors. Licensed under 
	the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may 
	obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to 
	in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF 
	ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under 
	the License. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.jboss.borg</groupId>
	<artifactId>borg</artifactId>
	<!--
	1. mvn release:prepare
	2. mvn release:clean
	3. Increase version in spec file
	-->
	<version>3.6.9</version>
	<packaging>war</packaging>
	<name>Blog posts aggregator</name>
	<description>Blog post aggregator for JBoss Developer - planet.jboss.org</description>

	<url>http://planet.jboss.org</url>
	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<distribution>repo</distribution>
			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
		</license>
	</licenses>

	<scm>
		<connection>scm:git:git://github.com/jbossorg/borg</connection>
		<developerConnection>scm:git:ssh://github.com/jbossorg/borg</developerConnection>
		<url>https://github.com/jbossorg/borg</url>
	  <tag>3.6.9</tag>
  </scm>

	<ciManagement>
		<system>travis-ci</system>
		<url>https://travis-ci.org/jbossorg/borg</url>
	</ciManagement>

	<issueManagement>
		<system>jira</system>
		<url>https://issues.jboss.org/browse/ORG</url>
	</issueManagement>

	<developers>
		<developer>
			<id>lkrzyzan</id>
			<name>Libor Krzyzanek</name>
			<organization>Red Hat</organization>
			<organizationUrl>http://www.redhat.com</organizationUrl>
			<timezone>+1</timezone>
			<url>http://community.jboss.org/people/lkrzyzanek</url>
		</developer>
	</developers>

	<properties>
		<!-- 1.7 for Openshfit Online v2 -->
		<compileSource>1.8</compileSource>
		<filter.name>localhost</filter.name>

		<!-- Explicitly declaring the source encoding eliminates the following message: -->
		<!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent! -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<maven-compiler-plugin.version>2.3.2</maven-compiler-plugin.version>
	</properties>


	<dependencyManagement>
		<dependencies>
			<!-- Dependency management for JBoss EAP 6.2 artifacts
			See here: http://maven.repository.redhat.com/techpreview/all/org/jboss/bom/eap6-supported-artifacts/
			-->
			<dependency>
				<groupId>org.jboss.bom</groupId>
				<artifactId>eap6-supported-artifacts</artifactId>
				<version>6.4.7.GA</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<!-- EAP 6.4 -->
			<!-- docs: http://hc.apache.org/httpcomponents-client-4.3.x/index.html -->
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>4.3.6</version>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpcore</artifactId>
				<version>4.3.3</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!--
		As updates are released for EAP the version of the provided jboss-javaee-6.0
		jar can change.  To ensure your application is compiling against the same jars
		that the runtime provides the <version> element below should match the
		installed version of EAP on the node hosting your application.  To determine
		the version of EAP running on the node, log into an example EAP application and
		look in the jbosseap/logs/server.log file for the line:

		... JBAS015874: JBoss EAP 6.1.1.GA (AS 7.2.1.Final-redhat-10) started ...

		To determine the correct value for <version>, download the maven repository zip
		file corresponding to the installed version of EAP from the customer service
		portal [1].  Unzip the file and examine the single directory under
		jboss-eap-*-maven-repository/org/jboss/spec/jboss-javaee-6.0

		[1] https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?downloadType=distributions&product=appplatform&productChanged=yes"
		-->
		<dependency>
			<groupId>org.jboss.spec</groupId>
			<artifactId>jboss-javaee-6.0</artifactId>
			<version>3.0.2.Final-redhat-7</version>
			<type>pom</type>
			<scope>provided</scope>
		</dependency>

		<!-- First declare the APIs we depend on and need for compilation. All of them are provided by JBoss AS 7 -->
		<!-- JSR-303 (Bean Validation) Implementation -->
		<!-- Provides portable constraints such as @Email -->
		<!-- Hibernate Validator is shipped in JBoss AS 7 -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Needed for Hibernate statistics -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<groupId>dom4j</groupId>
					<artifactId>dom4j</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Cache -->
		<dependency>
			<groupId>org.infinispan</groupId>
			<artifactId>infinispan-core</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Infinispan dependency -->
		<dependency>
			<groupId>org.infinispan</groupId>
			<artifactId>infinispan-cdi</artifactId>
			<!-- Missing in BOM -->
			<version>5.2.7.Final</version>
			<scope>provided</scope>
			<exclusions>
				<!-- Avoid not working Injection HttpRequestServlet from Solder -->
				<exclusion>
					<groupId>org.jboss.solder</groupId>
					<artifactId>solder-impl</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Artifacts needed by application -->
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
		</dependency>

		<dependency>
			<groupId>net.sourceforge.htmlcleaner</groupId>
			<artifactId>htmlcleaner</artifactId>
			<version>2.2</version>
			<exclusions>
				<exclusion>
					<artifactId>ant</artifactId>
					<groupId>org.apache.ant</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>rome</groupId>
			<artifactId>rome</artifactId>
			<version>1.0</version>
		</dependency>

		<dependency>
			<!-- jsoup HTML parser library @ http://jsoup.org/ -->
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>1.6.3</version>
		</dependency>

		<dependency>
			<groupId>com.ocpsoft</groupId>
			<artifactId>prettyfaces-jsf2</artifactId>
			<version>3.3.2</version>
		</dependency>

		<dependency>
			<groupId>org.tuckey</groupId>
			<artifactId>urlrewritefilter</artifactId>
			<version>4.0.3</version>
		</dependency>

		<!-- Needed by Proxy rule. Would be great to support http client 4.x which is already used -->
		<dependency>
			<groupId>commons-httpclient</groupId>
			<artifactId>commons-httpclient</artifactId>
			<version>3.1</version>
		</dependency>

		<dependency>
			<groupId>org.jasig.cas.client</groupId>
			<artifactId>cas-client-core</artifactId>
			<version>3.2.1</version>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
		</dependency>

		<dependency>
			<groupId>org.twitter4j</groupId>
			<artifactId>twitter4j-core</artifactId>
			<version>4.0.1</version>
		</dependency>

		<!-- Openshift doesn't provide Jackson module so better bundle dependency into war -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.9</version>
		</dependency>

		<!-- Needed for running tests (you may also use TestNG) -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.9.5</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<!-- Maven will append the version to the finalName (which is the name given to the generated war, and hence the context 
			root) -->
		<finalName>${project.artifactId}</finalName>

		<filters>
			<filter>${basedir}/src/main/filters/${filter.name}.properties</filter>
		</filters>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.properties</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
				<excludes>
					<exclude>**/*.properties</exclude>
				</excludes>
			</resource>
		</resources>

		<plugins>
			<!-- Compiler plugin enforces Java 1.6 compatibility and activates annotation processors -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>${compileSource}</source>
					<target>${compileSource}</target>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1.1</version>
				<configuration>
					<webResources>
						<resource>
							<directory>${basedir}/src/main/webapp</directory>
							<filtering>true</filtering>
							<includes>
								<include>WEB-INF/web.xml</include>
								<include>WEB-INF/urlrewrite.xml</include>
							</includes>
						</resource>
						<resource>
							<directory>${project.build.directory}/generated-webapp</directory>
							<includes>
								<include>**/*-min.css</include>
								<include>**/*-min.js</include>
							</includes>
						</resource>
					</webResources>
				</configuration>
			</plugin>


			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.5</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/generated-webapp/resources</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}/src/main/webapp/resources</directory>
									<includes>
										<include>**/*.css</include>
										<include>**/*.js</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.primefaces.extensions</groupId>
				<artifactId>resources-optimizer-maven-plugin</artifactId>
				<version>1.0.0</version>
				<executions>
					<execution>
						<id>optimize</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>optimize</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<compilationLevel>WHITESPACE_ONLY</compilationLevel>
					<warningLevel>VERBOSE</warningLevel>
					<failOnWarning>true</failOnWarning>
					<suffix>-min</suffix>
					<useDataUri>false</useDataUri>
					<resourcesSets>
						<resourcesSet>
							<inputDir>${project.build.directory}/generated-webapp/resources/css</inputDir>
							<includes>
								<include>**/*.css</include>
							</includes>
							<aggregations>
								<aggregation>
									<outputFile>
										${project.build.directory}/generated-webapp/resources/css/all-min.css
									</outputFile>
								</aggregation>
							</aggregations>
						</resourcesSet>
						<resourcesSet>
							<inputDir>${project.build.directory}/generated-webapp/resources/js</inputDir>
							<includes>
								<include>**/*.js</include>
							</includes>
							<aggregations>
								<aggregation>
									<outputFile>
										${project.build.directory}/generated-webapp/resources/js/all-min.js
									</outputFile>
								</aggregation>
							</aggregations>
						</resourcesSet>
						<resourcesSet>
							<inputDir>${project.build.directory}/generated-webapp/resources</inputDir>
							<includes>
								<include>**/*.js</include>
							</includes>
							<excludes>
								<exclude>js/**</exclude>
							</excludes>
							<aggregations>
								<aggregation>
									<withoutCompress>true</withoutCompress>
									<outputFile>
										${project.build.directory}/generated-webapp/resources/thirdparty-all-min.js
									</outputFile>
								</aggregation>
							</aggregations>
						</resourcesSet>
					</resourcesSets>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.3</version>
				<configuration>
					<tagNameFormat>@{project.version}</tagNameFormat>
					<autoVersionSubmodules>true</autoVersionSubmodules>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<format>xml</format>
					<maxmem>256m</maxmem>
					<!-- aggregated reports for multi-module projects -->
					<aggregate>true</aggregate>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.eluder.coveralls</groupId>
				<artifactId>coveralls-maven-plugin</artifactId>
				<version>3.0.1</version>
				<configuration>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<!-- When built in OpenShift the 'openshift' profile will be used when invoking mvn. -->
			<!-- Use this profile for any OpenShift specific customization your app will need. -->
			<!-- By default that is to put the resulting archive into the 'deployments' folder. -->
			<!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
			<id>openshift</id>
			<properties>
				<filter.name>openshift</filter.name>
				<cas.serverName>https://${OPENSHIFT_APP_DNS}</cas.serverName>
			</properties>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-war-plugin</artifactId>
						<version>2.1.1</version>
						<configuration>
							<outputDirectory>deployments</outputDirectory>
							<warName>ROOT</warName>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<version>${maven-compiler-plugin.version}</version>
						<configuration>
							<source>1.7</source>
							<target>1.7</target>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<!-- Profile for building app for jboss.org infrastructure -->
			<id>jbossorg</id>
			<properties>
				<filter.name>jbossorg</filter.name>
			</properties>
		</profile>

		<profile>
			<id>idea-jboss-hotdeploy</id>
			<build>
				<!-- JBoss server needs exploded artifact ending by .war but idea doesn't handle it. Eclipse handle it correctly. -->
				<finalName>${project.artifactId}.war</finalName>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>2.14</version>
						<configuration>
							<skipTests>true</skipTests>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>redhat-rpm-build</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-deploy-plugin</artifactId>
						<version>2.4</version>
						<configuration>
							<skip>false</skip>
						</configuration>
					</plugin>
				</plugins>
			</build>
			<distributionManagement>
				<repository>
					<!-- can be any custom ID -->
					<id>redhat-rpm-repo</id>
					<!-- can be any custom name -->
					<name>RedHatRPMRepo</name>
					<url>http://download.devel.redhat.com/brewroot/repos/mead-shared-build/latest/maven</url>
				</repository>
			</distributionManagement>
		</profile>
	</profiles>


	<repositories>
		<repository>
			<id>eap</id>
			<url>http://maven.repository.redhat.com/techpreview/all</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>eap</id>
			<url>http://maven.repository.redhat.com/techpreview/all</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>


</project>
